any:
    faiss-t1:
      docker-tag: billion-scale-benchmark-faissconda
      module: benchmark.algorithms.faiss_t1
      constructor: Faiss
      base-args: ["@metric"]
      run-groups:
        base:
          # the following args show all build arguments that can be provided to the t1 baseline.
          args: |
              [{"indexkey": "OPQ32_128,IVF1024_HNSW32,PQ32",
                "buildthreads": -1,
                "by_residual": -1,
                "add_bs": 100000000,
                "two_level_clustering": true,
                "quantizer_add_efSearch": 80,
                "quantizer_efConstruction": 200,
                "maxtrain": 100000000,
                "clustering_niter": 25
                }]
          query-args: |
              ["nprobe=1,quantizer_efSearch=4",
              "nprobe=2,quantizer_efSearch=4",
              "nprobe=2,quantizer_efSearch=8",
              "nprobe=4,quantizer_efSearch=4",
              "nprobe=2,quantizer_efSearch=16"]           
random-filter-s:
    faiss:
      docker-tag: billion-scale-benchmark-filterfaiss
      module: neurips_2023.filter.faiss 
      constructor: FAISS
      base-args: ["@metric"]
      run-groups:
        base:
          args: |
            [{"indexkey": "IVF1024,SQ8"}]
          query-args: |
            ["nprobe=1",
              "nprobe=2",
              "nprobe=4",
              "nprobe=64",
              "nprobe=1024"]   
random-s:
    faiss:
      docker-tag: billion-scale-benchmark-filterfaiss
      module: neurips_2023.filter.faiss 
      constructor: FAISS
      base-args: ["@metric"]
      run-groups:
        base:
          args: |
            [{"indexkey": "IVF1024,SQ8"}]
          query-args: |
            ["nprobe=1",
              "nprobe=2",
              "nprobe=4"]
    faiss-t1:
      docker-tag: billion-scale-benchmark-faissconda
      module: benchmark.algorithms.faiss_t1
      constructor: Faiss
      base-args: ["@metric"]
      run-groups:
        base:
          # the following args show all build arguments that can be provided to the t1 baseline.
          args: |
              [{"indexkey": "OPQ32_128,IVF1024_HNSW32,PQ32",
                "buildthreads": -1,
                "by_residual": -1,
                "add_bs": 100000000,
                "two_level_clustering": true,
                "quantizer_add_efSearch": 80,
                "quantizer_efConstruction": 200,
                "maxtrain": 100000000,
                "clustering_niter": 25
                }]
          query-args: |
              ["nprobe=1,quantizer_efSearch=4",
              "nprobe=2,quantizer_efSearch=4",
              "nprobe=2,quantizer_efSearch=8",
              "nprobe=4,quantizer_efSearch=4",
              "nprobe=2,quantizer_efSearch=16"]           
    diskann-t2:
      docker-tag: billion-scale-benchmark-diskann
      module: benchmark.algorithms.diskann-t2
      constructor: Diskann
      base-args: ["@metric"]
      run-groups:
        base:
          args: |
              [{"R":32, "L":32, "B":0.0001, "M":1}]
          query-args: |
              [{"Ls":10, "BW":4, "T":16}]
sparse-small:
    linscan:
      docker-tag: billion-scale-benchmark-linscan
      module: neurips_2023.sparse.linscan 
      constructor: SparseIndex
      base-args: ["@metric"]
      run-groups:
        base:
          args: |
            [{}]
          query-args: |
            [{"alpha":0.5}]
msturing-1M:
    diskann-t2:
      docker-tag: billion-scale-benchmark-diskann
      module: benchmark.algorithms.diskann-t2
      constructor: Diskann
      base-args: ["@metric"]
      run-groups:
        base:
          args: |
              [{"R":50, "L":50, "B":0.03, "M":1}]
          query-args: |
              [{"Ls":50, "BW":4, "T":16}]
yfcc-10M-unfiltered:
    faiss:
      docker-tag: billion-scale-benchmark-filterfaiss
      module: neurips_2023.filter.faiss 
      constructor: FAISS
      base-args: ["@metric"]
      run-groups:
        base:
          args: |
            [{}]
          query-args: |
            ["nprobe=1", "nprobe=4"]
yfcc-10M:
    faiss:
      docker-tag: billion-scale-benchmark-filterfaiss
      module: neurips_2023.filter.faiss 
      constructor: FAISS
      base-args: ["@metric"]
      run-groups:
        base:
          args: |
            [{}]
          query-args: |
            ["nprobe=1", "nprobe=4"]

